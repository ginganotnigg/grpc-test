// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/crypto/crypto.proto

package crypto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopCoinsRequest) Reset() {
	*x = TopCoinsRequest{}
	mi := &file_proto_crypto_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCoinsRequest) ProtoMessage() {}

func (x *TopCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crypto_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCoinsRequest.ProtoReflect.Descriptor instead.
func (*TopCoinsRequest) Descriptor() ([]byte, []int) {
	return file_proto_crypto_crypto_proto_rawDescGZIP(), []int{0}
}

type Coin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CurrentPrice  float64                `protobuf:"fixed64,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	Ath           float64                `protobuf:"fixed64,5,opt,name=ath,proto3" json:"ath,omitempty"`
	Atl           float64                `protobuf:"fixed64,6,opt,name=atl,proto3" json:"atl,omitempty"`
	MarketCap     float64                `protobuf:"fixed64,7,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_proto_crypto_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crypto_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_proto_crypto_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *Coin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Coin) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Coin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coin) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Coin) GetAth() float64 {
	if x != nil {
		return x.Ath
	}
	return 0
}

func (x *Coin) GetAtl() float64 {
	if x != nil {
		return x.Atl
	}
	return 0
}

func (x *Coin) GetMarketCap() float64 {
	if x != nil {
		return x.MarketCap
	}
	return 0
}

type TopCoinsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coins         []*Coin                `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopCoinsResponse) Reset() {
	*x = TopCoinsResponse{}
	mi := &file_proto_crypto_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCoinsResponse) ProtoMessage() {}

func (x *TopCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crypto_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCoinsResponse.ProtoReflect.Descriptor instead.
func (*TopCoinsResponse) Descriptor() ([]byte, []int) {
	return file_proto_crypto_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *TopCoinsResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

var File_proto_crypto_crypto_proto protoreflect.FileDescriptor

var file_proto_crypto_crypto_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61,
	0x74, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x70, 0x22, 0x36, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x32, 0x6f, 0x0a, 0x0d, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2f, 0x74, 0x6f, 0x70, 0x2d, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_crypto_crypto_proto_rawDescOnce sync.Once
	file_proto_crypto_crypto_proto_rawDescData []byte
)

func file_proto_crypto_crypto_proto_rawDescGZIP() []byte {
	file_proto_crypto_crypto_proto_rawDescOnce.Do(func() {
		file_proto_crypto_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_crypto_crypto_proto_rawDesc), len(file_proto_crypto_crypto_proto_rawDesc)))
	})
	return file_proto_crypto_crypto_proto_rawDescData
}

var file_proto_crypto_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_crypto_crypto_proto_goTypes = []any{
	(*TopCoinsRequest)(nil),  // 0: crypto.TopCoinsRequest
	(*Coin)(nil),             // 1: crypto.Coin
	(*TopCoinsResponse)(nil), // 2: crypto.TopCoinsResponse
}
var file_proto_crypto_crypto_proto_depIdxs = []int32{
	1, // 0: crypto.TopCoinsResponse.coins:type_name -> crypto.Coin
	0, // 1: crypto.CryptoService.GetTopCoins:input_type -> crypto.TopCoinsRequest
	2, // 2: crypto.CryptoService.GetTopCoins:output_type -> crypto.TopCoinsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_crypto_crypto_proto_init() }
func file_proto_crypto_crypto_proto_init() {
	if File_proto_crypto_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_crypto_crypto_proto_rawDesc), len(file_proto_crypto_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_crypto_crypto_proto_goTypes,
		DependencyIndexes: file_proto_crypto_crypto_proto_depIdxs,
		MessageInfos:      file_proto_crypto_crypto_proto_msgTypes,
	}.Build()
	File_proto_crypto_crypto_proto = out.File
	file_proto_crypto_crypto_proto_goTypes = nil
	file_proto_crypto_crypto_proto_depIdxs = nil
}
